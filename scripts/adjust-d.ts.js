/**
 * Make adjustments to the definition generated by Typescript
 */

var fs = require('fs')
var path = require('path')

var file = path.join(__dirname, '../dist/index.d.ts')

let content = fs.readFileSync(file) + ''

content = content
	.replace(/\r\n/g, '\n')
	.replace(/\s*export default [^;{]+;/g, '')
	.replace(/export (default )?/g, '')
	.replace(/(}\n)?declare module [^{]+{/g, '')
	.replace(/import [^;]+;/g, '')
	.replace(/}\n$/, '')
	.replace(/;\n(\s*)\//g, ';\n\n$1/')
	.replace(/}\n(\s*)([^\s])/g, '}\n\n$1$2')
	.replace(/\n\n(\s*\n)+/g, '\n\n')
	.replace(/(  )(type EasingFunction = )/g, '$1export $2')
	.replace(/(  )(const Easing: \{\n)/g, '$1export $2')
	.replace(/(  )(let NOW: \(\) =\> number;)/g, '$1export $2')
	.replace(/(  )(type InterpolationFunction = )/g, '$1export $2')
	.replace(/(  )(const Interpolation: \{\n)/g, '$1export $2')
	.replace(/(  )(class Sequence \{\n)/g, '$1export $2')
	.replace(/(  )(const VERSION = )/g, '$1export $2')
	.replace(/(  )(class Main extends Group \{\n)/g, '$1export $2')
	.replace(/(  )(class Tween\<T extends UnknownProps\> \{\n)/g, '$1export $2')
	.replace(/(  )(type UnknownProps = Record\<string, unknown\>;\n)/g, '$1export $2')
	.replace(/(  )(class Group \{\n)/g, '$1export $2')
	.replace(/(  start\(time)(: number\): this;\n)/g, '$1?$2')
	.replace(/(  update\(time)(: number, preserve?: boolean\): boolean;\n)/g, '$1?$2')

content = `declare module "tweenjs" {
	${content}
    export default TWEEN;
}
`

fs.writeFileSync(file, content)
